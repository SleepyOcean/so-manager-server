<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sleepy.manager.generation.mapper.CommentMapper">

    <resultMap type="Comment" id="CommentResult">
        <result property="id" column="id"/>
        <result property="content" column="content"/>
        <result property="createdBy" column="created_by"/>
        <result property="replyTo" column="reply_to"/>
        <result property="articleId" column="article_id"/>
        <result property="createdAt" column="created_at"/>
        <result property="status" column="status"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <sql id="selectCommentVo">
        select id,
               content,
               created_by,
               reply_to,
               article_id,
               created_at,
               status,
               updated_at
        from comment
    </sql>

    <select id="selectCommentList" parameterType="Comment" resultMap="CommentResult">
        <include refid="selectCommentVo"/>
        <where>
            <if test="content != null  and content != ''">
                and content like #{content}
            </if>
            <if test="createdBy != null ">
                and created_by = #{createdBy}
            </if>
            <if test="replyTo != null ">
                and reply_to = #{replyTo}
            </if>
            <if test="articleId != null ">
                and article_id = #{articleId}
            </if>
            <if test="createdAt != null ">
                and created_at = #{createdAt}
            </if>
            <if test="createdAtStart != null and createdAtEnd != null ">
                and created_at between #{createdAtStart} and #{createdAtEnd}
            </if>
            <if test="status != null ">
                and status = #{status}
            </if>
            <if test="status == null ">
                and status = 1
            </if>
            <if test="updatedAt != null ">
                and updated_at = #{updatedAt}
            </if>
        </where>
        order by created_at DESC
    </select>

    <select id="selectCommentById" parameterType="Long"
            resultMap="CommentResult">
        <include refid="selectCommentVo"/>
        where id = #{id}
    </select>

    <insert id="insertComment" parameterType="Comment" useGeneratedKeys="true"
            keyProperty="id">
        insert into comment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="content != null and content != ''">content,
            </if>
            <if test="createdBy != null">created_by,
            </if>
            <if test="replyTo != null">reply_to,
            </if>
            <if test="articleId != null">article_id,
            </if>
            <if test="createdAt != null">created_at,
            </if>
            <if test="status != null">status,
            </if>
            <if test="updatedAt != null">updated_at,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="content != null and content != ''">#{content},
            </if>
            <if test="createdBy != null">#{createdBy},
            </if>
            <if test="replyTo != null">#{replyTo},
            </if>
            <if test="articleId != null">#{articleId},
            </if>
            <if test="createdAt != null">#{createdAt},
            </if>
            <if test="status != null">#{status},
            </if>
            <if test="updatedAt != null">#{updatedAt},
            </if>
        </trim>
    </insert>

    <update id="updateComment" parameterType="Comment">
        update comment
        <trim prefix="SET" suffixOverrides=",">
            <if test="content != null and content != ''">content =
                #{content},
            </if>
            <if test="createdBy != null">created_by =
                #{createdBy},
            </if>
            <if test="replyTo != null">reply_to =
                #{replyTo},
            </if>
            <if test="articleId != null">article_id =
                #{articleId},
            </if>
            <if test="createdAt != null">created_at =
                #{createdAt},
            </if>
            <if test="status != null">status =
                #{status},
            </if>
            <if test="updatedAt != null">updated_at =
                #{updatedAt},
            </if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteCommentById" parameterType="Long">
        delete
        from comment
        where id = #{id}
    </delete>

    <delete id="deleteCommentByIds" parameterType="String">
        delete from comment where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="countComment" parameterType="Comment" resultType="Comment">
        SELECT article_id as articleId, COUNT(*) as commentCount FROM comment
        <where>
            status = 1
            <if test="articleIds != null ">
                and article_id in
                <foreach item="articleId" collection="articleIds" open="(" separator="," close=")">
                    #{articleId}
                </foreach>
            </if>
            group by article_id
        </where>
    </select>
</mapper>